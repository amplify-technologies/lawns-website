name: Deploy

on:
  push:
    branches:
      - "sandbox"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout files
        uses: actions/checkout@v2

      - name: login to container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: build and publish docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.output.labels }}

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
      - name: install ssh key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SMEW_ID_RSA }}
          known_hosts: "placeholder"
      - name: adding known hosts
        run: |
          ssh-keygen -H ${{ secrets.SMEW_SERVER_ID }} >> ~/.ssh/known_hosts

      - name: ssh to smew and deploy
        shell: bash
        env:
          USER: ${{ secrets.SMEW_SERVER_USER }}
          IP: ${{ secrets.SMEW_SERVER_ID }}
          REGISTRY_TOKEN: ${{ secrets.CONTAINER_REGISTRY_ACCESS_TOKEN }}
          REGISTRY_USER: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        run: |
          apk update && apk add openssh-client && apk add curl
          ssh -o StrictHostKeyChecking=no "$USER@$IP" "echo "$REGISTRY_TOKEN" | docker login ghcr.io -u "$REGISTRY_USER" --password-stdin && docker pull ghcr.io/$github.repository"
          ssh -o StrictHostKeyChecking=no "$USER@$IP" "docker container rm -f amplify || true"
          ssh -o StrictHostKeyChecking=no "$USER@$IP" "docker run -d -p 8002:80 --name amplify --network smew.network ghcr.io/$github.repository"

  # deploy:
  #   needs: build-and-push-image
  #   runs-on: [self-hosted, ubuntu-latest]
  #   steps:
  #     - name: Checkout files
  #       uses: actions/checkout@v2

  #     - name: install doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
